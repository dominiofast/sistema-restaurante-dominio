-- üîß CORRE√á√ÉO DEFINITIVA: RLS Policies para cardapio_branding
-- Data: 2025-01-27

-- ==============================================
-- REMOVER POL√çTICAS PROBLEM√ÅTICAS
-- ==============================================

-- Remover todas as pol√≠ticas existentes da tabela cardapio_branding
DROP POLICY IF EXISTS "Company users can delete branding" ON cardapio_branding;
DROP POLICY IF EXISTS "Company users can delete their branding" ON cardapio_branding;
DROP POLICY IF EXISTS "Company users can insert their branding" ON cardapio_branding;
DROP POLICY IF EXISTS "Company users can update their branding" ON cardapio_branding;
DROP POLICY IF EXISTS "Company users can view branding" ON cardapio_branding;
DROP POLICY IF EXISTS "Public can view active branding" ON cardapio_branding;
DROP POLICY IF EXISTS "Super admins can delete any branding" ON cardapio_branding;
DROP POLICY IF EXISTS "Super admins can insert any branding" ON cardapio_branding;
DROP POLICY IF EXISTS "Super admins can update any branding" ON cardapio_branding;

-- ==============================================
-- CRIAR POL√çTICAS FUNCIONAIS E SIMPLES
-- ==============================================

-- Pol√≠tica para visualiza√ß√£o p√∫blica de branding ativo
CREATE POLICY "public_view_active_branding"
ON cardapio_branding
FOR SELECT
TO anon, authenticated
USING (is_active = true);

-- Pol√≠tica para usu√°rios autenticados gerenciarem branding da pr√≥pria empresa
CREATE POLICY "users_manage_company_branding"
ON cardapio_branding
FOR ALL
TO authenticated
USING (
    auth.uid() IS NOT NULL
    AND (
        -- Verificar se o usu√°rio pertence √† empresa
        company_id IN (
            SELECT uc.company_id 
            FROM user_companies uc 
            WHERE uc.user_id = auth.uid() 
            AND uc.is_active = true
        )
        OR
        -- Ou se √© super admin
        EXISTS (
            SELECT 1 FROM user_companies uc
            JOIN companies c ON c.id = uc.company_id
            WHERE uc.user_id = auth.uid()
            AND uc.role = 'super_admin'
        )
    )
)
WITH CHECK (
    auth.uid() IS NOT NULL
    AND (
        -- Verificar se o usu√°rio pertence √† empresa
        company_id IN (
            SELECT uc.company_id 
            FROM user_companies uc 
            WHERE uc.user_id = auth.uid() 
            AND uc.is_active = true
        )
        OR
        -- Ou se √© super admin
        EXISTS (
            SELECT 1 FROM user_companies uc
            JOIN companies c ON c.id = uc.company_id
            WHERE uc.user_id = auth.uid()
            AND uc.role = 'super_admin'
        )
    )
);

-- ==============================================
-- VERIFICA√á√ÉO DE DEBUG
-- ==============================================

-- Verificar se as pol√≠ticas foram criadas
DO $$
BEGIN
    RAISE NOTICE '‚úÖ Pol√≠ticas RLS corrigidas para cardapio_branding';
    RAISE NOTICE 'üìã Pol√≠ticas ativas:';
    RAISE NOTICE '- public_view_active_branding: Para visualiza√ß√£o p√∫blica';
    RAISE NOTICE '- users_manage_company_branding: Para usu√°rios da empresa';
    RAISE NOTICE '';
    RAISE NOTICE 'üß™ Teste salvando uma configura√ß√£o agora.';
END $$;