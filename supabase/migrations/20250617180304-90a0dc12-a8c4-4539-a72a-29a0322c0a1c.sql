
-- Primeiro, vamos verificar se os usuários existem e depois atualizar com um hash válido
-- Deletar usuários existentes se houver problemas
DELETE FROM auth.users WHERE email IN ('admin@sistema.com', 'joao@pizzaria.com');

-- Criar usuários com hash de senha correto para '123456'
-- Usando hash bcrypt válido: $2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi
INSERT INTO auth.users (
  id,
  instance_id,
  aud,
  role,
  email,
  encrypted_password,
  email_confirmed_at,
  confirmation_sent_at,
  confirmation_token,
  recovery_token,
  email_change_token_new,
  email_change,
  phone_change,
  phone_change_token,
  email_change_token_current,
  email_change_confirm_status,
  raw_app_meta_data,
  raw_user_meta_data,
  is_super_admin,
  created_at,
  updated_at,
  phone_confirmed_at,
  banned_until,
  reauthentication_token,
  reauthentication_sent_at,
  is_sso_user,
  deleted_at
) VALUES 
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'admin@sistema.com',
  '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi',
  NOW(),
  NOW(),
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  0,
  '{"provider":"email","providers":["email"]}',
  '{"name":"Admin Sistema","role":"admin"}',
  FALSE,
  NOW(),
  NOW(),
  NULL,
  NULL,
  '',
  NULL,
  FALSE,
  NULL
),
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'joao@pizzaria.com',
  '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi',
  NOW(),
  NOW(),
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  0,
  '{"provider":"email","providers":["email"]}',
  '{"name":"João Pizzaria","role":"lojista"}',
  FALSE,
  NOW(),
  NOW(),
  NULL,
  NULL,
  '',
  NULL,
  FALSE,
  NULL
);
