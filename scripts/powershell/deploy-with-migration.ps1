Write-Host "================================================" -ForegroundColor Cyan
Write-Host "     DEPLOY COMPLETO - MIGRATION + APLICA√á√ÉO    " -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se o Supabase CLI est√° instalado
if (!(Get-Command supabase -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Supabase CLI n√£o encontrado. Por favor, instale primeiro." -ForegroundColor Red
    Write-Host "üì¶ Instale com: scoop install supabase" -ForegroundColor Yellow
    exit 1
}

# Verificar se est√° no diret√≥rio correto
if (!(Test-Path "supabase/config.toml")) {
    Write-Host "‚ùå Arquivo supabase/config.toml n√£o encontrado." -ForegroundColor Red
    Write-Host "üìÅ Certifique-se de estar na raiz do projeto." -ForegroundColor Yellow
    exit 1
}

Write-Host "üîç Verificando conex√£o com Supabase..." -ForegroundColor Yellow
$projectStatus = supabase projects list 2>&1

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå N√£o conectado ao Supabase. Fazendo login..." -ForegroundColor Red
    supabase login
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Falha no login do Supabase" -ForegroundColor Red
        exit 1
    }
}

# Verificar se o projeto est√° linkado
Write-Host "üîó Verificando link com projeto..." -ForegroundColor Yellow
$linkedProject = supabase projects list --output json | ConvertFrom-Json

if (!$linkedProject) {
    Write-Host "‚ö†Ô∏è  Projeto n√£o est√° linkado." -ForegroundColor Yellow
    Write-Host "üìù Digite o Project Ref do seu projeto Supabase:" -ForegroundColor Cyan
    $projectRef = Read-Host "Project Ref"
    
    Write-Host "üîó Linkando projeto..." -ForegroundColor Yellow
    supabase link --project-ref $projectRef
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Falha ao linkar projeto" -ForegroundColor Red
        exit 1
    }
}

Write-Host ""
Write-Host "üìä ETAPA 1: APLICANDO MIGRATIONS NO BANCO DE DADOS" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green

# Listar migrations pendentes
Write-Host "üìã Verificando migrations..." -ForegroundColor Yellow
supabase migration list

# Aplicar migrations
Write-Host "`nüì§ Aplicando migrations no banco remoto..." -ForegroundColor Yellow
supabase db push

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Migrations aplicadas com sucesso!" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erro ao aplicar migrations" -ForegroundColor Red
    Write-Host "üí° Verifique os logs acima para mais detalhes" -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "üîÑ ETAPA 2: ATUALIZANDO TIPOS TYPESCRIPT" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green

Write-Host "üìù Gerando tipos TypeScript atualizados..." -ForegroundColor Yellow

# Obter o project ID
$projectId = (supabase projects list --output json | ConvertFrom-Json)[0].id

if ($projectId) {
    npx supabase gen types typescript --project-id $projectId > src/integrations/supabase/types.ts
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Tipos TypeScript atualizados!" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Aviso: Falha ao gerar tipos TypeScript" -ForegroundColor Yellow
        Write-Host "   Voc√™ pode gerar manualmente mais tarde" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ö†Ô∏è  N√£o foi poss√≠vel obter o Project ID" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üöÄ ETAPA 3: BUILD DA APLICA√á√ÉO" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green

Write-Host "üì¶ Instalando depend√™ncias..." -ForegroundColor Yellow
npm install

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erro ao instalar depend√™ncias" -ForegroundColor Red
    exit 1
}

Write-Host "`nüî® Fazendo build da aplica√ß√£o..." -ForegroundColor Yellow
npm run build

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Build conclu√≠do com sucesso!" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erro no build da aplica√ß√£o" -ForegroundColor Red
    Write-Host "üí° Verifique os erros de compila√ß√£o acima" -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "üåê ETAPA 4: DEPLOY" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green

# Verificar se existe script de deploy
if (Test-Path "package.json") {
    $packageJson = Get-Content "package.json" | ConvertFrom-Json
    
    if ($packageJson.scripts.deploy) {
        Write-Host "üì§ Executando deploy..." -ForegroundColor Yellow
        npm run deploy
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Deploy realizado com sucesso!" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Erro no deploy" -ForegroundColor Red
            exit 1
        }
    } else {
        Write-Host "‚ö†Ô∏è  Script de deploy n√£o encontrado no package.json" -ForegroundColor Yellow
        Write-Host "üìù Configure o script 'deploy' no seu package.json" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "Exemplo para Vercel:" -ForegroundColor Cyan
        Write-Host '  "deploy": "vercel --prod"' -ForegroundColor Gray
        Write-Host ""
        Write-Host "Exemplo para Netlify:" -ForegroundColor Cyan
        Write-Host '  "deploy": "netlify deploy --prod"' -ForegroundColor Gray
    }
} else {
    Write-Host "‚ùå package.json n√£o encontrado" -ForegroundColor Red
}

Write-Host ""
Write-Host "================================================" -ForegroundColor Cyan
Write-Host "            üìä RESUMO DO DEPLOY                 " -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚úÖ Migrations aplicadas no banco de dados" -ForegroundColor Green
Write-Host "‚úÖ Tipos TypeScript atualizados" -ForegroundColor Green
Write-Host "‚úÖ Build da aplica√ß√£o conclu√≠do" -ForegroundColor Green

if ($packageJson.scripts.deploy) {
    Write-Host "‚úÖ Deploy realizado" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Deploy manual necess√°rio" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéâ Processo conclu√≠do!" -ForegroundColor Green
Write-Host ""
Write-Host "üìù Pr√≥ximos passos:" -ForegroundColor Yellow
Write-Host "1. Teste a aplica√ß√£o em produ√ß√£o" -ForegroundColor White
Write-Host "2. Verifique se as novas funcionalidades est√£o funcionando" -ForegroundColor White
Write-Host "3. Monitore os logs de erro" -ForegroundColor White
Write-Host "" 